name: 'Validate and Scan Terraform code'

on:
  push:
    branches: [ "main" ]
  pull_request:

  workflow_dispatch:
    inputs:
      approve:
        description: 'Approve the next step'
        required: true
        default: 'false'

permissions:
  contents: read

jobs:
  tfsec:
    name: Validate and Scan Terraform code
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Clone repo
        uses: actions/checkout@v3

      - name: Generate TFSec report
        id: tfsec
        uses: aquasecurity/tfsec-sarif-action@v0.1.4
        with:
          sarif_file: tfsec.sarif         

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: tfsec.sarif

      - name: Run TFSec
        uses: aquasecurity/tfsec-action@v1.0.0
        # with:
        #   soft_fail: false

      - name: Check TFSec issues
        if: ${{ failure() }}
        run: exit 1

  integration_test:
    needs: tfsec
    runs-on: ubuntu-latest
    if: github.event.inputs.approve == 'true'
    steps:  
      - name: Request code review
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: { login } } = await github.rest.users.getAuthenticated();
            if (login === 'approved_user1' || login === 'approved_user2') {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: 'Code Review and Approval',
                body: 'Code changes are ready for review and approval.',
                labels: ['code review']
              });
            } else {
              throw new Error('User is not authorized to review and approve code.');
            }
      - name: Wait for approval
        id: approval
        uses: montudor/action-wait-for-approval@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.inputs.issue_number }}
          message: 'Code review and approval'
          timeout-minutes: 60

      - name: Finalize review
        if: steps.approval.outputs.approved == 'true'
        run: echo "Code review approved! Proceeding with deployment."

      - name: Cancel review
        if: steps.approval.outputs.approved == 'false'
        run: echo "Code review was not approved. Cancelling deployment."

      - name: Deploy to Production
        run: exit 0
