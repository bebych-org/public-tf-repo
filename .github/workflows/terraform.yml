name: 'Validate and Scan Terraform code'

on:
  push:
    branches: [ "main" ]
  pull_request:

  workflow_dispatch:

permissions:
  contents: read
  issues: write


jobs:
  static_analysis:
    name: Validate and Scan Terraform code
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
      pull-requests: write

    steps:
      - name: Clone repo
        uses: actions/checkout@v4.1.0

      - name: TFSec PR commenter
        uses: aquasecurity/tfsec-pr-commenter-action@v1.3.1
        with:
          github_token: ${{ github.token }}
          working_directory: ''
          soft_fail_commenter: true
          tfsec_args: --concise-output

      - name: Run TFSec
        uses: aquasecurity/tfsec-action@v1.0.3

      - name: Run Trivy vulnerability scanner in IaC mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          hide-progress: false
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

  code_review_approve:
    name: Code review and approve
    runs-on: ubuntu-latest
    needs: static_analysis
    steps:
      - uses: trstringer/manual-approval@v1
        timeout-minutes: 60
        with:
          secret: ${{ github.TOKEN }}
          approvers: oleksii-bebych
          minimum-approvals: 1

  integration_test:
    name: Integration test
    runs-on: ubuntu-latest
    needs: code_review_approve
    steps:
      - name: Deploy to Production
        run: echo "Deployment steps go here"


