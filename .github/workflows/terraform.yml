name: 'Validate and Scan Terraform code'

on:
  push:
    branches: [ "main" ]
  pull_request:

  workflow_dispatch:
    inputs:
      approve:
        description: 'Approve the deployment'
        required: true
        default: 'false'

permissions:
  contents: read

jobs:
  static_analysis:
    name: Validate and Scan Terraform code
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Clone repo
        uses: actions/checkout@v4.1.0

      - name: Generate TFSec report
        uses: aquasecurity/tfsec-sarif-action@v0.1.4
        with:
          sarif_file: tfsec.sarif         

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: tfsec.sarif

      - name: Run TFSec
        uses: aquasecurity/tfsec-action@v1.0.0
        # with:
        #   soft_fail: false

      - name: Check TFSec issues
        if: ${{ failure() }}
        run: exit 1

  approval:
    needs: static_analysis
    runs-on: ubuntu-latest
    if: github.event.inputs.approve == 'true'
    steps:
      - name: Manual approval
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createOrUpdateApproval({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.workflow_run.pull_requests[0].number,
              approval_id: context.workflow_run.id,
              event: 'APPROVE'
            })

  integration_test:
    needs: approval
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Production
        if: github.event.inputs.approve == 'true'
        run: echo "Deployment steps go here"


